---

- name: Create new user for service
  user:
    name: "{{ service_user }}"
    create_home: yes

- name: Install DNF packages
  dnf:
    name: "{{ dnf_packages }}"
    state: latest
    update_cache: yes
  tags:
    - update_packages

- name: Set SELinux option for right working of nginx + Gunicorn
  seboolean:
    state: yes
    name: httpd_can_network_connect
    persistent: yes
  when: ansible_facts.selinux.status == 'enabled'

- name: Set config_root
  set_fact:
    config_root: "/etc/mirror_service/"
  tags:
    - always

- name: Set ipinfo path
  set_fact:
    ipinfo_path: "/var/ipinfo/"

- name: Set ipinfo NFS
  set_fact:
    ipinfo_nfs: "fs-04029e8b12637703b.efs.us-east-1.amazonaws.com:/"
  when: local_dev is not defined or not local_dev

- name: Create ipinfo mount path
  file:
    path: "{{ ipinfo_path }}"
    state: directory
    mode: '0755'

- name: Mount ipinfo path
  ansible.posix.mount:
    src: "{{ ipinfo_nfs }}"
    opts: ro,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
    state: mounted
    fstype: nfs
    boot: true
    path: "{{ ipinfo_path }}"
  when: local_dev is not defined or not local_dev

- name: Fetch sample IPinfo location database
  ansible.builtin.get_url:
    url: https://github.com/ipinfo/sample-database/raw/main/IP%20Geolocation/ip_geolocation_sample.mmdb
    dest: /var/ipinfo/standard_location.mmdb
    force: false
  when: local_dev is defined and local_dev

- name: Fetch free continent database
  ansible.builtin.get_url:
    url: https://country.io/continent.json
    dest: /var/ipinfo/continent.json
    force: false
  when: local_dev is defined and local_dev

- name: Fetch sample IPinfo ASN database
  ansible.builtin.get_url:
    url: https://github.com/ipinfo/sample-database/raw/main/ASN%20Database/asn_sample.mmdb
    dest: /var/ipinfo/asn.mmdb
    force: false
  when: local_dev is defined and local_dev
  
- name: Create configs directory
  file:
    name: "{{ config_root }}"
    state: directory
    group: "{{ service_user }}"
    owner: "{{ service_user }}"
    mode: '0755'

- name: Create db directory
  file:
    name: "{{ config_root }}/data"
    state: directory
    group: "{{ service_user }}"
    owner: "{{ service_user }}"
    mode: '0755'

- name: Create config directory
  file:
    name: "{{ config_root }}/mirrors"
    state: directory
    group: "{{ service_user }}"
    owner: "{{ service_user }}"
    mode: '0755'

- name: Sysctl option `net.core.somaxconn`
  sysctl:
    name: "net.core.somaxconn"
    value: "65535"
    state: present
    sysctl_set: yes
    reload: yes

- name: Enable persistent journald
  ini_file:
    section: Journal
    path: /etc/systemd/journald.conf
    option: Storage
    value: persistant
  register:
    persistent_journald

- name: Restart journald
  systemd:
    state: restarted
    name: systemd-journald
  when: persistent_journald.changed

- name: Write name of deploy environment
  copy:
    dest: "{{ config_root }}/deploy_environment.var"
    content: "{{ deploy_environment }}"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
  tags:
    - backend
