# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  config_checker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Create Python venv
        run: python3.9 -m venv --system-site-packages ~/.ci_venv

      - name: Install Python packages into venv
        run: ~/.ci_venv/bin/pip3 install -r ci/req.txt

      - id: files
        uses: jitterbit/get-changed-files@v1

      - name: Check YAML configs
        run: |
          export PYTHONPATH=$PYTHONPATH:ci
          echo ==========
          echo $PYTHONPATH
          echo ==========
          ls -a ~
          echo ==========
          ls -a
          echo ==========
          ls -a ci
          PYTHONPATH=$PYTHONPATH:ci ~/.ci_venv/bin/python3 -c "import sys; print(sys.path)"
          PYTHONPATH=$PYTHONPATH:ci ~/.ci_venv/bin/python3 ci/config_checker.py -h
#          mirror_regexp="mirrors.d/.*.yml"
#          if ! echo "${{ steps.files.outputs.all }}" | grep -E "${mirror_regexp}" &> /dev/null; then
#            # we check only the main config if PR doesn't contain any mirror config
#            ~/.ci_venv/bin/python3 ci/config_checker.py -sc config.yml -ss yaml_snippets/json_schemas/service_config.json
#          else
#            changed_files=""
#            for changed_file in ${{ steps.files.outputs.all }}; do
#              if echo "${changed_file}" | grep -E "${mirror_regexp}" &> /dev/null; then
#                changed_files="${changed_file} ${changed_files}"
#              fi
#            done
#            PYTHONPATH=ci ~/.ci_venv/bin/python3 ci/config_checker.py -sc config.yml -ss ci/yaml_snippets/json_schemas/service_config.json -ms ci/yaml_snippets/json_schemas/mirror_config.json -mc=${changed_files}
#          fi
