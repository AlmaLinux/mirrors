---
name: Mirror PR Tests
on: [pull_request]
jobs:
  changedfiles:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
    steps:
      # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)"
  yaml-lint:
    runs-on: ubuntu-latest
    needs: changedfiles
    steps:
      - name: change files
        run: echo ${{needs.changedfiles.outputs.all}}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Lint YAML Files
        run: |
          for file in ${{needs.changedfiles.outputs.all}}; do
            yamllint -d "{rules: {line-length: {max: 999}}}" -f github ${{ github.workspace }}/$file
          done
      # in the future hopefully we can lint all yaml files
      #      - name: Run yamllint
      #        uses: frenck/action-yamllint@v1
  yaml-schema:
    runs-on: ubuntu-latest
    needs: [changedfiles,yaml-lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: npm install -g pajv
      - run: |
          for file in ${{needs.changedfiles.outputs.all}}; do
            if [[ $file == mirrors.d/* ]] ;
            then
              pajv validate -s ci/mirror_config_schema.json -d ${{ github.workspace }}/$file
            fi
          done
  nominatim-check:
    runs-on: ubuntu-latest
    needs: [changedfiles,yaml-lint,yaml-schema]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: pip install shyaml
      - name: Validate nominatim lookup2
        run: |
          for file in ${{needs.changedfiles.outputs.all}}; do
            if [[ $file == mirrors.d/* ]] ;
            then
              echo "Checking geolocation data against Nominatim for $file"
              COUNTRY=$(cat ${{ github.workspace }}/$file | shyaml get-value geolocation.country)
              STATE=$(cat ${{ github.workspace }}/$file | shyaml get-value geolocation.state_province)
              # shyaml will return "None" for blank values but that will make nominatim fail
              if [ "$STATE" == "None" ];
              then
                STATE=""
              fi
              CITY=$(cat ${{ github.workspace }}/$file | shyaml get-value geolocation.city)
              NOMINATIM_URL="https://nominatim.openstreetmap.org/search?city=$CITY&state=$STATE&country=$COUNTRY&format=json"
              NOMINATIM_LOOKUP=$(curl -s --referer "https://github.com/$GITHUB_REPOSITORY CI" $NOMINATIM_URL)
              MATCHES=$(echo $NOMINATIM_LOOKUP | jq length)
              echo $MATCHES
              if [[ "$MATCHES" == "0" ]]; then
                echo "$file contains invalid geolocation data"
                echo "Country: $COUNTRY"
                echo "State: $STATE"
                echo "City: $CITY"
                echo "Nominatim URL: $NOMINATIM_URL"
                echo "cURL Output:"
                echo $NOMINATIM_LOOKUP
                exit 1
              else
                echo "Valid geolocation data found for $file"
              fi
            fi
          done
